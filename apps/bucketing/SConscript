Import('fgEnv', 'cgEnv')

# [mcj] Note that the equivalent Makefile only conditionally defines
# these flags. Are we sure we want 64- or 32-bit values/weights?
# TODO document why these should be enabled in Julienne but not Ligra
# TODO decide about -DPD -DBYTE -DNIBBLE
fgEnv.Append(CPPDEFINES = ['LONG', 'EDGELONG', 'BYTERLE'])
cgEnv.Append(CPPDEFINES = ['LONG', 'EDGELONG', 'BYTERLE'])

apps = [
        # [mcj] Disable this build on the main branch as the Scheduler header
        # file isn't here.
        # TODO uncomment once priority updates are merged into main
        #"KCore"
        ]

cgEnv.Append(CPPDEFINES = ['COARSE_GRAIN'])
fgCompEnv = fgEnv.Clone()
fgCompEnv.Append(CPPDEFINES = ['COMPETITIVE_SCHEDULE'])
fgCompEnv['PROGSUFFIX'] = '_fg_comp'
fgCompEnv['OBJSUFFIX'] = '.fgco'
cgCompEnv = cgEnv.Clone()
cgCompEnv.Append(CPPDEFINES = ['COMPETITIVE_SCHEDULE'])
cgCompEnv['PROGSUFFIX'] = '_cg_comp'
cgCompEnv['OBJSUFFIX'] = '.cgco'

for env in [fgEnv, cgEnv, fgCompEnv, cgCompEnv]:
    for app in apps:
        env.Program(target='pls' + app, source=[app + '_pls.C'])
